smtp {
    host=smtp.gmail.com
    #port=25
    ssl=true
    user=your_username
    password=your_password
    from="your_from_alias"
}

securesocial {
    #
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    #
    onLoginGoTo=/

    #
    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    #
    onLogoutGoTo=/

    #
    # Enable SSL
    #
    ssl=false

     cookie {
            name=tweedli
            path=/
            httpOnly=true
            idleTimeoutInMinutes=20000
            absoluteTimeOutInMinutes=30000
            makeTransient=false
    }


    twitter {
        requestTokenUrl="https://twitter.com/oauth/request_token"
        accessTokenUrl="https://twitter.com/oauth/access_token"
        authorizationUrl="https://twitter.com/oauth/authenticate"
        consumerKey="ntTnSpHEpBeGQMRs4fP9w"
        consumerSecret="GMOblgVimQrqprlPrEdug6G6VDGAWooLJnUU8VjYuU"
    }

    facebook {
        authorizationUrl="https://graph.facebook.com/oauth/authorize"
        accessTokenUrl="https://graph.facebook.com/oauth/access_token"
        clientId="215396015279676"
        clientSecret="7d4330ef32d6d367560c6654f8b624d1"
        # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
        scope=email
    }

    google {
        authorizationUrl="https://accounts.google.com/o/oauth2/auth"
        accessTokenUrl="https://accounts.google.com/o/oauth2/token"
        clientId=your_client_id
        clientSecret=your_client_secret
        scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    }

    linkedin {
        requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
        accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
        authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
        consumerKey=your_consumer_key
        consumerSecret=your_consumer_secret
    }

    github {
        authorizationUrl="https://github.com/login/oauth/authorize"
        accessTokenUrl="https://github.com/login/oauth/access_token"
        clientId=your_client_id
        clientSecret=your_client_secret
    }

    foursquare {
        authorizationUrl="https://foursquare.com/oauth2/authenticate"
        accessTokenUrl="https://foursquare.com/oauth2/access_token"
        clientId=your_client_id
        clientSecret=your_client_secret
    }

    xing {
        requestTokenUrl="https://api.xing.com/v1/request_token"
        accessTokenUrl="https://api.xing.com/v1/access_token"
        authorizationUrl="https://api.xing.com/v1/authorize"
        consumerKey=your_consumer_key
        consumerSecret=your_consumer_secret
    }

    instagram {
        authorizationUrl="https://api.instagram.com/oauth/authorize"
        accessTokenUrl="https://api.instagram.com/oauth/access_token"
        clientId=your_client_id
        clientSecret=your_client_secret
    }

    vk {
        authorizationUrl="http://oauth.vk.com/authorize"
        accessTokenUrl="https://oauth.vk.com/access_token"
        clientId=your_client_id
        clientSecret=your_client_secret
    }

}
userpass {
    withUserNameSupport=false
    sendWelcomeEmail=true
    enableGravatarSupport=true
    signupSkipLogin=true
    tokenDuration=60
    tokenDeleteInterval=5
    minimumPasswordLength=8
    enableTokenJob=true
    hasher=bcrypt
}
